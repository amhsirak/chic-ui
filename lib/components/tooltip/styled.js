var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import { theme as typeColors } from "../../tokens/themes";
import styled from "styled-components";
export var StyledTooltip = styled.button(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    position: relative;\n    padding: 10px;\n    margin: 20px 5px 0 5px;\n    font-size: 12px;\n    font-weight: bold;\n    font-family: sans-serif;\n    background: #c2c2c2;\n    color: black;\n    text-align: center;\n    cursor: pointer;\n    border-radius: 5px;\n    border: none;\n\n    &:hover {\n        color: white;\n        background-color: #585858;\n    }\n\n    &::before {\n        content: attr(aria-label);\n        position: absolute;\n        z-index: 2;\n        max-width: 200px;\n        width: 100px;\n        padding: 5px 8px;\n        font-size: 12px;\n        line-height: 1.4;\n        border-radius: 5px;\n        background-color: ", ";\n        color: ", ";\n        display: none;\n    }\n\n    &::after {\n        content: \"\";\n        position: absolute;\n        z-index: 1;\n        display: none;\n        width: 0;\n        height: 0;\n        border: 5px solid transparent;\n    }\n\n    &:hover:before {\n        display: inline-block;\n    }\n\n    &:hover:after {\n        display: inline-block;\n    }\n\n    ", "\n\n    \n"], ["\n    position: relative;\n    padding: 10px;\n    margin: 20px 5px 0 5px;\n    font-size: 12px;\n    font-weight: bold;\n    font-family: sans-serif;\n    background: #c2c2c2;\n    color: black;\n    text-align: center;\n    cursor: pointer;\n    border-radius: 5px;\n    border: none;\n\n    &:hover {\n        color: white;\n        background-color: #585858;\n    }\n\n    &::before {\n        content: attr(aria-label);\n        position: absolute;\n        z-index: 2;\n        max-width: 200px;\n        width: 100px;\n        padding: 5px 8px;\n        font-size: 12px;\n        line-height: 1.4;\n        border-radius: 5px;\n        background-color: ", ";\n        color: ", ";\n        display: none;\n    }\n\n    &::after {\n        content: \"\";\n        position: absolute;\n        z-index: 1;\n        display: none;\n        width: 0;\n        height: 0;\n        border: 5px solid transparent;\n    }\n\n    &:hover:before {\n        display: inline-block;\n    }\n\n    &:hover:after {\n        display: inline-block;\n    }\n\n    ", "\n\n    \n"])), function (pre) { return typeColors[pre.colorType].bgColor; }, function (pre) { return typeColors[pre.colorType].color; }, function (pre) { return pre.placement === 'top' ? " &::before { bottom: calc(100% + 5px); left: 50%; transform: translateX(-50%); } &::after { bottom: 100%; left: 50%; transform: translateX(-50%); border-bottom-width: 0; border-top-color: ".concat(typeColors[pre.colorType].bgColor) :
    pre.placement === 'left' ? "&::before { top: 50%; right: calc(100% + 5px); transform: translateY(-50%); } &::after { top: 50%; right: 100%; transform: translateY(-50%); border-right-width: 0; border-left-color: ".concat(typeColors[pre.colorType].bgColor, ";}") :
        pre.placement === 'bottom' ? "&::before { top: calc(100% + 5px); left: 50%; transform: translateX(-50%); } &::after { top: 100%; left: 50%; transform: translateX(-50%); border-top-width: 0; border-bottom-color: ".concat(typeColors[pre.colorType].bgColor, "; }") :
            "&::before { top: 50%; left: calc(100% + 5px);transform: translateY(-50%); } &::after { top: 50%; left: 100%; transform: translateY(-50%); border-left-width: 0; border-right-color: ".concat(typeColors[pre.colorType].bgColor, "; }"); });
var templateObject_1;
//# sourceMappingURL=styled.js.map